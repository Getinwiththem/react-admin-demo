{"version":3,"sources":["../../data-generator/lib/utils.js","../../data-generator/lib/index.js","../../data-generator/lib/customers.js","../../data-generator/lib/categories.js","../../data-generator/lib/products.js","../../data-generator/lib/commands.js","../../data-generator/lib/reviews.js","../../data-generator/lib/finalize.js","fakeServer/rest.js"],"names":["__importDefault","this","mod","__esModule","default","Object","defineProperty","exports","value","en_1","__webpack_require__","weightedArrayElement","values","weights","random","arrayElement","reduce","acc","index","concat","Array","fill","weightedBoolean","likelyhood","number","randomDate","minDate","maxDate","minTs","Date","getTime","now","range","randomRange","max","ts","Math","sqrt","randomFloat","min","parseFloat","precision","toFixed","customers_1","categories_1","products_1","commands_1","reviews_1","finalize_1","options","serializeDate","db","customers","categories","products","commands","reviews","utils_1","_a","from","keys","map","id","first_seen","last_seen","has_ordered","first_name","name","firstName","last_name","lastName","email","internet","birthday","date","past","address","streetName","zipcode","zipCode","city","avatar","toISOString","latest_purchase","has_newsletter","groups","nb_commands","total_spent","category","width","height","category_id","reference","substr","alphaNumeric","price","thumbnail","image","description","lorem","paragraph","stock","is_after_1","sub_days_1","today","aMonthAgo","nbProducts","basket","product_id","quantity","total_ex_taxes","total","product","delivery_fees","tax_rate","taxes","customer","filter","status","boolean","toUpperCase","customer_id","returned","reviewers","command","indexOf","command_id","rating","comment","apply","sentences","join","forEach","customersBySpending","length","push","review","settings","configuration","url","mail","sender","transport","service","auth","user","pass","file_type_whiltelist","r","__webpack_exports__","fakerest__WEBPACK_IMPORTED_MODULE_0__","fakerest__WEBPACK_IMPORTED_MODULE_0___default","n","fetch_mock__WEBPACK_IMPORTED_MODULE_1__","fetch_mock__WEBPACK_IMPORTED_MODULE_1___default","data_generator__WEBPACK_IMPORTED_MODULE_2__","data_generator__WEBPACK_IMPORTED_MODULE_2___default","data","generateData","restServer","FakeRest","FetchServer","window","init","toggleLogging","fetchMock","mock","getHandler","restore"],"mappings":"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","file":"static/js/5.bd0bc283.chunk.js","sourcesContent":["\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar en_1 = __importDefault(require(\"faker/locale/en\"));\n\nexports.weightedArrayElement = function (values, weights) {\n  return en_1.default.random.arrayElement(values.reduce(function (acc, value, index) {\n    return acc.concat(new Array(weights[index]).fill(value));\n  }, []));\n};\n\nexports.weightedBoolean = function (likelyhood) {\n  return en_1.default.random.number(99) < likelyhood;\n};\n\nexports.randomDate = function (minDate, maxDate) {\n  var minTs = minDate instanceof Date ? minDate.getTime() : Date.now() - 5 * 365 * 24 * 60 * 60 * 1000; // 5 years\n\n  var maxTs = maxDate instanceof Date ? maxDate.getTime() : Date.now();\n  var range = maxTs - minTs;\n  var randomRange = en_1.default.random.number({\n    max: range\n  }); // move it more towards today to account for traffic increase\n\n  var ts = Math.sqrt(randomRange / range) * range;\n  return new Date(minTs + ts);\n};\n\nexports.randomFloat = function (min, max) {\n  return parseFloat(en_1.default.random.number({\n    min: min,\n    max: max,\n    precision: 0.01\n  }).toFixed(2));\n};","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar customers_1 = __importDefault(require(\"./customers\"));\n\nvar categories_1 = __importDefault(require(\"./categories\"));\n\nvar products_1 = __importDefault(require(\"./products\"));\n\nvar commands_1 = __importDefault(require(\"./commands\"));\n\nvar reviews_1 = __importDefault(require(\"./reviews\"));\n\nvar finalize_1 = __importDefault(require(\"./finalize\"));\n\nexports.default = function (options) {\n  if (options === void 0) {\n    options = {\n      serializeDate: true\n    };\n  }\n\n  var db = {};\n  db.customers = customers_1.default(db, options);\n  db.categories = categories_1.default(db, options);\n  db.products = products_1.default(db, options);\n  db.commands = commands_1.default(db, options);\n  db.reviews = reviews_1.default(db, options);\n  finalize_1.default(db);\n  return db;\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar en_1 = require(\"faker/locale/en\");\n\nvar utils_1 = require(\"./utils\");\n\nexports.default = function (db, _a) {\n  var serializeDate = _a.serializeDate;\n  return Array.from(Array(900).keys()).map(function (id) {\n    var first_seen = utils_1.randomDate();\n    var last_seen = utils_1.randomDate(first_seen);\n    var has_ordered = utils_1.weightedBoolean(25);\n    var first_name = en_1.name.firstName();\n    var last_name = en_1.name.lastName();\n    var email = en_1.internet.email(first_name, last_name);\n    var birthday = has_ordered ? en_1.date.past(60) : null;\n    return {\n      id: id,\n      first_name: first_name,\n      last_name: last_name,\n      email: email,\n      address: has_ordered ? en_1.address.streetName() : null,\n      zipcode: has_ordered ? en_1.address.zipCode() : null,\n      city: has_ordered ? en_1.address.city() : null,\n      avatar: en_1.internet.avatar(),\n      birthday: serializeDate && birthday ? birthday.toISOString() : birthday,\n      first_seen: serializeDate ? first_seen.toISOString() : first_seen,\n      last_seen: serializeDate ? last_seen.toISOString() : last_seen,\n      has_ordered: has_ordered,\n      latest_purchase: null,\n      has_newsletter: has_ordered ? utils_1.weightedBoolean(30) : true,\n      groups: [],\n      nb_commands: 0,\n      total_spent: 0\n    };\n  });\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nexports.default = function () {\n  return [{\n    id: 0,\n    name: 'animals'\n  }, {\n    id: 1,\n    name: 'beard'\n  }, {\n    id: 2,\n    name: 'business'\n  }, {\n    id: 3,\n    name: 'cars'\n  }, {\n    id: 4,\n    name: 'city'\n  }, {\n    id: 5,\n    name: 'flowers'\n  }, {\n    id: 6,\n    name: 'food'\n  }, {\n    id: 7,\n    name: 'nature'\n  }, {\n    id: 8,\n    name: 'people'\n  }, {\n    id: 9,\n    name: 'sports'\n  }, {\n    id: 10,\n    name: 'tech'\n  }, {\n    id: 11,\n    name: 'travel'\n  }, {\n    id: 12,\n    name: 'water'\n  }];\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar en_1 = require(\"faker/locale/en\");\n\nvar utils_1 = require(\"./utils\");\n\nexports.default = function (db) {\n  var id = 0;\n  return db.categories.reduce(function (acc, category) {\n    return acc.concat(Array.from(Array(10).keys()).map(function (index) {\n      var width = utils_1.randomFloat(10, 40);\n      var height = utils_1.randomFloat(10, 40);\n      return {\n        id: id++,\n        category_id: category.id,\n        reference: category.name.substr(0, 2) + '-' + en_1.random.alphaNumeric(5) + '-' + en_1.random.arrayElement('ABCDEFGHIJKLMNOPQRSTUVWXYZ'),\n        width: width,\n        height: height,\n        price: utils_1.randomFloat(width * height / 20, width * height / 15),\n        thumbnail: 'https://marmelab.com/posters/' + category.name + '-' + (index + 1) + '.jpeg',\n        image: 'https://marmelab.com/posters/' + category.name + '-' + (index + 1) + '.jpeg',\n        description: en_1.lorem.paragraph(),\n        stock: utils_1.weightedBoolean(20) ? 0 : en_1.random.number({\n          min: 0,\n          max: 250\n        })\n      };\n    }));\n  }, []);\n};","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar en_1 = require(\"faker/locale/en\");\n\nvar is_after_1 = __importDefault(require(\"date-fns/is_after\"));\n\nvar sub_days_1 = __importDefault(require(\"date-fns/sub_days\"));\n\nvar utils_1 = require(\"./utils\");\n\nexports.default = function (db, _a) {\n  var serializeDate = _a.serializeDate;\n  var today = new Date();\n  var aMonthAgo = sub_days_1.default(today, 30);\n  return Array.from(Array(600).keys()).map(function (id) {\n    var nbProducts = utils_1.weightedArrayElement([1, 2, 3, 4, 5, 6, 7, 8, 9, 10], [30, 20, 5, 2, 1, 1, 1, 1, 1, 1]);\n    var basket = Array.from(Array(nbProducts).keys()).map(function () {\n      return {\n        product_id: en_1.random.number({\n          min: 0,\n          max: 10 * 13 - 1\n        }),\n        quantity: utils_1.weightedArrayElement([1, 2, 3, 4, 5], [10, 5, 3, 2, 1])\n      };\n    });\n    var total_ex_taxes = basket.reduce(function (total, product) {\n      return total + db.products[product.product_id].price * product.quantity;\n    }, 0);\n    var delivery_fees = utils_1.randomFloat(3, 8);\n    var tax_rate = en_1.random.arrayElement([0.12, 0.17, 0.2]);\n    var taxes = parseFloat(((total_ex_taxes + delivery_fees) * tax_rate).toFixed(2));\n    var customer = en_1.random.arrayElement(db.customers.filter(function (customer) {\n      return customer.has_ordered;\n    }));\n    var date = utils_1.randomDate(customer.first_seen, customer.last_seen);\n    var status = is_after_1.default(date, aMonthAgo) && en_1.random.boolean() ? 'ordered' : utils_1.weightedArrayElement(['delivered', 'cancelled'], [10, 1]);\n    return {\n      id: id,\n      reference: en_1.random.alphaNumeric(6).toUpperCase(),\n      date: serializeDate ? date.toISOString() : date,\n      customer_id: customer.id,\n      basket: basket,\n      total_ex_taxes: total_ex_taxes,\n      delivery_fees: delivery_fees,\n      tax_rate: tax_rate,\n      taxes: taxes,\n      total: parseFloat((total_ex_taxes + delivery_fees + taxes).toFixed(2)),\n      status: status,\n      returned: status == 'delivered' ? utils_1.weightedBoolean(10) : false\n    };\n  });\n};","\"use strict\";\n\nvar __importDefault = this && this.__importDefault || function (mod) {\n  return mod && mod.__esModule ? mod : {\n    \"default\": mod\n  };\n};\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar en_1 = require(\"faker/locale/en\");\n\nvar sub_days_1 = __importDefault(require(\"date-fns/sub_days\"));\n\nvar is_after_1 = __importDefault(require(\"date-fns/is_after\"));\n\nvar utils_1 = require(\"./utils\");\n\nexports.default = function (db, _a) {\n  var serializeDate = _a.serializeDate;\n  var today = new Date();\n  var aMonthAgo = sub_days_1.default(today, 30);\n  var id = 0;\n  var reviewers = db.customers.filter(function (customer) {\n    return customer.has_ordered;\n  }).filter(function () {\n    return utils_1.weightedBoolean(60);\n  }) // only 60% of buyers write reviews\n  .map(function (customer) {\n    return customer.id;\n  });\n  return db.commands.filter(function (command) {\n    return reviewers.indexOf(command.customer_id) !== -1;\n  }).reduce(function (acc, command) {\n    return acc.concat(command.basket.filter(function () {\n      return utils_1.weightedBoolean(40);\n    }) // reviewers review 40% of their products\n    .map(function (product) {\n      var date = utils_1.randomDate(command.date);\n      var status = is_after_1.default(aMonthAgo, date) ? utils_1.weightedArrayElement(['accepted', 'rejected'], [3, 1]) : utils_1.weightedArrayElement(['pending', 'accepted', 'rejected'], [5, 3, 1]);\n      return {\n        id: id++,\n        date: serializeDate ? date.toISOString() : date,\n        status: status,\n        command_id: command.id,\n        product_id: product.product_id,\n        customer_id: command.customer_id,\n        rating: en_1.random.number({\n          min: 1,\n          max: 5\n        }),\n        comment: Array.apply(null, Array(en_1.random.number({\n          min: 1,\n          max: 5\n        }))).map(function () {\n          return en_1.lorem.sentences();\n        }).join('\\n \\r')\n      };\n    }));\n  }, []);\n};","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar utils_1 = require(\"./utils\");\n\nfunction default_1(db) {\n  // set latest purchase date\n  db.commands.forEach(function (command) {\n    var customer = db.customers[command.customer_id];\n\n    if (!customer.latest_purchase || customer.latest_purchase < command.date) {\n      customer.latest_purchase = command.date;\n    }\n\n    customer.total_spent += command.total;\n    customer.nb_commands++;\n  }); // add 'collector' group\n\n  var customersBySpending = db.commands.reduce(function (customers, command) {\n    if (!customers[command.customer_id]) {\n      customers[command.customer_id] = {\n        nbProducts: 0\n      };\n    }\n\n    customers[command.customer_id].nbProducts += command.basket.length;\n    return customers;\n  }, {});\n  Object.keys(customersBySpending).map(function (customer_id) {\n    if (customersBySpending[customer_id].nbProducts > 10) {\n      db.customers[customer_id].groups.push('collector');\n    }\n  }); // add 'ordered_once' group\n\n  db.customers.filter(function (customer) {\n    return customer.nb_commands == 1;\n  }).forEach(function (customer) {\n    return customer.groups.push('ordered_once');\n  }); // add 'compulsive' group\n\n  db.customers.filter(function (customer) {\n    return customer.total_spent > 1500;\n  }).forEach(function (customer) {\n    return customer.groups.push('compulsive');\n  }); // add 'regular' group\n\n  db.customers.filter(function () {\n    return utils_1.weightedBoolean(20);\n  }).forEach(function (customer) {\n    return customer.groups.push('regular');\n  }); // add 'returns' group\n\n  db.commands.filter(function (command) {\n    return command.returned;\n  }).forEach(function (command) {\n    if (db.customers[command.customer_id].groups.indexOf('returns') === -1) {\n      db.customers[command.customer_id].groups.push('returns');\n    }\n  }); // add 'reviewer' group\n\n  db.reviews.forEach(function (review) {\n    var customer = db.customers[review.customer_id];\n\n    if (customer.groups.indexOf('reviewer') === -1) {\n      customer.groups.push('reviewer');\n    }\n  }); // add settings\n\n  db.settings = [{\n    id: 1,\n    configuration: {\n      url: 'http://posters-galore.com/',\n      mail: {\n        sender: 'julio@posters-galore.com',\n        transport: {\n          service: 'fakemail',\n          auth: {\n            user: 'fake@mail.com',\n            pass: 'f00b@r'\n          }\n        }\n      },\n      file_type_whiltelist: ['txt', 'doc', 'docx', 'xls', 'xlsx', 'pdf', 'png', 'jpg']\n    }\n  }];\n}\n\nexports.default = default_1;","import FakeRest from 'fakerest';\nimport fetchMock from 'fetch-mock';\nimport generateData from 'data-generator';\n\nexport default () => {\n    const data = generateData({ serializeDate: true });\n    const restServer = new FakeRest.FetchServer('http://localhost:4000');\n    if (window) {\n        window.restServer = restServer; // give way to update data in the console\n    }\n    restServer.init(data);\n    restServer.toggleLogging(); // logging is off by default, enable it\n    fetchMock.mock('begin:http://localhost:4000', restServer.getHandler());\n    return () => fetchMock.restore();\n};\n"],"sourceRoot":""}