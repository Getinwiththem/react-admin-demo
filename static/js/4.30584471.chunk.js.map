{"version":3,"sources":["../../../packages/ra-data-graphql/esm/introspection.js","../../../packages/ra-data-graphql/esm/index.js","../../../packages/ra-data-graphql-simple/esm/buildQuery.js","../../../packages/ra-data-graphql/esm/buildApolloClient.js","../../../packages/ra-data-graphql/esm/constants.js","../../../packages/ra-data-graphql-simple/esm/getFinalType.js","../../../packages/ra-data-graphql-simple/esm/isList.js","../../../packages/ra-data-graphql-simple/esm/buildVariables.js","../../../packages/ra-data-graphql-simple/esm/isRequired.js","../../../packages/ra-data-graphql-simple/esm/buildGqlQuery.js","../../../packages/ra-data-graphql-simple/esm/getResponseParser.js","../../../packages/ra-data-graphql-simple/esm/index.js","dataProvider/graphql.js"],"names":["templateObject_1","esm_a","buildVariablesImpl","buildGqlQueryImpl","getResponseParserImpl","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","__rest","e","indexOf","getOwnPropertySymbols","QUERY_TYPES","dataFetchActions","MUTATION_TYPES","ALL_TYPES","concat","__makeTemplateObject","cooked","raw","defineProperty","value","introspection_assign","__awaiter","thisArg","_arguments","P","generator","Promise","resolve","reject","fulfilled","step","next","rejected","result","done","then","__generator","body","f","y","g","_","label","sent","trys","ops","verb","throw","return","Symbol","iterator","v","op","TypeError","pop","push","esm_assign","esm_awaiter","esm_generator","esm_rest","esm_QUERY_TYPES","defaultOptions","resolveIntrospection","client","options","undefined","schema","_a","queries","types","isResource","buildResource","potentialResources","filteredResources","resources","_b","query","fetchPolicy","src_default","graphql","data","__schema","reduce","acc","type","name","fields","filter","some","operationNames","aorFetchType","find","include","exclude","Array","isArray","includes","filterTypesByIncludeExclude","map","introspection","resource","pluralize_default","getOptions","esm","clientObject","clientOptions","buildQueryFactory","override","otherOptions","introspectionResults","buildQuery","raDataProvider","_c","merge_default","console","warn","ApolloClient","cache","link","uri","finalLink","finalCache","lib","restore","buildApolloClient","params","overridedbuildQuery","get_default","parseResponse","apolloQuery_1","apolloQuery","mutation","variables","mutate","observeRequest","watchQuery","saga","esm_getFinalType","getFinalType","kind","NON_NULL","LIST","ofType","esm_isList","isList","buildVariables_assign","sanitizeValue","parseInt","parseFloat","buildCreateUpdateVariables","queryType","keys","key","args","a","id","esm_isRequired","isRequired","buildGqlQuery_rest","buildGqlQuery_buildArgs","validVariables","k","arg","graphql_ast_types_browser_lib","buildGqlQuery_buildApolloArgs","required","buildGqlQuery_getArgType","getResponseParser_assign","esm_buildQuery","_d","_e","_f","_g","ids","filterSome","inputFields","filter_1","parts","split","resourceField_1","resourceField","type_2","isAList","page","pagination","perPage","sortField","sort","field","sortOrder","order","buildVariables_buildGetListVariables","target","metaVariables","apolloArgs","metaArgs","buildFields","startsWith","OBJECT","r","linkedType","buildGqlQuery_buildFields","response","sanitize","sanitizeResource","linkedResource","linkedResourceData","d","getResponseParser_sanitizeResource","items","total","count","knownResources","resourceName","Error","join","ra_data_graphql_simple_esm_assign","ra_data_graphql_simple_esm_rest","esm_defaultOptions","__webpack_exports__","defaultDataProvider","fetchType","otherParams_1","all","results","otherParams_2","dataProvider","getGqlResource"],"mappings":"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","file":"static/js/4.30584471.chunk.js","sourcesContent":["var __makeTemplateObject = this && this.__makeTemplateObject || function (cooked, raw) {\n  if (Object.defineProperty) {\n    Object.defineProperty(cooked, \"raw\", {\n      value: raw\n    });\n  } else {\n    cooked.raw = raw;\n  }\n\n  return cooked;\n};\n\nvar __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar _this = this;\n\nimport { introspectionQuery } from 'graphql';\nimport gql from 'graphql-tag';\nimport { GET_LIST, GET_ONE } from 'react-admin';\nimport { ALL_TYPES } from './constants';\nexport var filterTypesByIncludeExclude = function filterTypesByIncludeExclude(_a) {\n  var include = _a.include,\n      exclude = _a.exclude;\n\n  if (Array.isArray(include)) {\n    return function (type) {\n      return include.includes(type.name);\n    };\n  }\n\n  if (typeof include === 'function') {\n    return function (type) {\n      return include(type);\n    };\n  }\n\n  if (Array.isArray(exclude)) {\n    return function (type) {\n      return !exclude.includes(type.name);\n    };\n  }\n\n  if (typeof exclude === 'function') {\n    return function (type) {\n      return !exclude(type);\n    };\n  }\n\n  return function () {\n    return true;\n  };\n};\n/**\n * @param {ApolloClient} client The Apollo client\n * @param {Object} options The introspection options\n */\n\nexport default (function (client, options) {\n  return __awaiter(_this, void 0, void 0, function () {\n    var schema, _a, queries, types, isResource, buildResource, potentialResources, filteredResources, resources;\n\n    return __generator(this, function (_b) {\n      switch (_b.label) {\n        case 0:\n          if (!options.schema) return [3\n          /*break*/\n          , 1];\n          _a = options.schema;\n          return [3\n          /*break*/\n          , 3];\n\n        case 1:\n          return [4\n          /*yield*/\n          , client.query({\n            fetchPolicy: 'network-only',\n            query: gql(templateObject_1 || (templateObject_1 = __makeTemplateObject([\"\\n                      \", \"\\n                  \"], [\"\\n                      \", \"\\n                  \"])), introspectionQuery)\n          }).then(function (_a) {\n            var __schema = _a.data.__schema;\n            return __schema;\n          })];\n\n        case 2:\n          _a = _b.sent();\n          _b.label = 3;\n\n        case 3:\n          schema = _a;\n          queries = schema.types.reduce(function (acc, type) {\n            if (type.name !== 'Query' && type.name !== 'Mutation') return acc;\n            return acc.concat(type.fields);\n          }, []);\n          types = schema.types.filter(function (type) {\n            return type.name !== 'Query' && type.name !== 'Mutation';\n          });\n\n          isResource = function isResource(type) {\n            return queries.some(function (query) {\n              return query.name === options.operationNames[GET_LIST](type);\n            }) && queries.some(function (query) {\n              return query.name === options.operationNames[GET_ONE](type);\n            });\n          };\n\n          buildResource = function buildResource(type) {\n            return ALL_TYPES.reduce(function (acc, aorFetchType) {\n              var _a;\n\n              return __assign({}, acc, (_a = {}, _a[aorFetchType] = queries.find(function (query) {\n                return options.operationNames[aorFetchType] && query.name == options.operationNames[aorFetchType](type);\n              }), _a));\n            }, {\n              type: type\n            });\n          };\n\n          potentialResources = types.filter(isResource);\n          filteredResources = potentialResources.filter(filterTypesByIncludeExclude(options));\n          resources = filteredResources.map(buildResource);\n          return [2\n          /*return*/\n          , {\n            types: types,\n            queries: queries,\n            resources: resources,\n            schema: schema\n          }];\n      }\n    });\n  });\n});\nvar templateObject_1;","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n\n    function step(result) {\n      result.done ? resolve(result.value) : new P(function (resolve) {\n        resolve(result.value);\n      }).then(fulfilled, rejected);\n    }\n\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\n\nvar __generator = this && this.__generator || function (thisArg, body) {\n  var _ = {\n    label: 0,\n    sent: function sent() {\n      if (t[0] & 1) throw t[1];\n      return t[1];\n    },\n    trys: [],\n    ops: []\n  },\n      f,\n      y,\n      t,\n      g;\n  return g = {\n    next: verb(0),\n    \"throw\": verb(1),\n    \"return\": verb(2)\n  }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function () {\n    return this;\n  }), g;\n\n  function verb(n) {\n    return function (v) {\n      return step([n, v]);\n    };\n  }\n\n  function step(op) {\n    if (f) throw new TypeError(\"Generator is already executing.\");\n\n    while (_) {\n      try {\n        if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\n        if (y = 0, t) op = [op[0] & 2, t.value];\n\n        switch (op[0]) {\n          case 0:\n          case 1:\n            t = op;\n            break;\n\n          case 4:\n            _.label++;\n            return {\n              value: op[1],\n              done: false\n            };\n\n          case 5:\n            _.label++;\n            y = op[1];\n            op = [0];\n            continue;\n\n          case 7:\n            op = _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n\n          default:\n            if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) {\n              _ = 0;\n              continue;\n            }\n\n            if (op[0] === 3 && (!t || op[1] > t[0] && op[1] < t[3])) {\n              _.label = op[1];\n              break;\n            }\n\n            if (op[0] === 6 && _.label < t[1]) {\n              _.label = t[1];\n              t = op;\n              break;\n            }\n\n            if (t && _.label < t[2]) {\n              _.label = t[2];\n\n              _.ops.push(op);\n\n              break;\n            }\n\n            if (t[2]) _.ops.pop();\n\n            _.trys.pop();\n\n            continue;\n        }\n\n        op = body.call(thisArg, _);\n      } catch (e) {\n        op = [6, e];\n        y = 0;\n      } finally {\n        f = t = 0;\n      }\n    }\n\n    if (op[0] & 5) throw op[1];\n    return {\n      value: op[0] ? op[1] : void 0,\n      done: true\n    };\n  }\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nvar _a;\n\nvar _this = this;\n\nimport merge from 'lodash/merge';\nimport get from 'lodash/get';\nimport pluralize from 'pluralize';\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, DELETE } from 'react-admin';\nimport buildApolloClient from './buildApolloClient';\nimport { QUERY_TYPES as INNER_QUERY_TYPES, MUTATION_TYPES as INNER_MUTATION_TYPES, ALL_TYPES as INNER_ALL_TYPES } from './constants';\nimport defaultResolveIntrospection from './introspection';\nexport var QUERY_TYPES = INNER_QUERY_TYPES;\nexport var MUTATION_TYPES = INNER_MUTATION_TYPES;\nexport var ALL_TYPES = INNER_ALL_TYPES;\nvar defaultOptions = {\n  resolveIntrospection: defaultResolveIntrospection,\n  introspection: {\n    operationNames: (_a = {}, _a[GET_LIST] = function (resource) {\n      return \"all\" + pluralize(resource.name);\n    }, _a[GET_ONE] = function (resource) {\n      return \"\" + resource.name;\n    }, _a[GET_MANY] = function (resource) {\n      return \"all\" + pluralize(resource.name);\n    }, _a[GET_MANY_REFERENCE] = function (resource) {\n      return \"all\" + pluralize(resource.name);\n    }, _a[CREATE] = function (resource) {\n      return \"create\" + resource.name;\n    }, _a[UPDATE] = function (resource) {\n      return \"update\" + resource.name;\n    }, _a[DELETE] = function (resource) {\n      return \"delete\" + resource.name;\n    }, _a),\n    exclude: undefined,\n    include: undefined\n  }\n};\n\nvar getOptions = function getOptions(options, aorFetchType, resource) {\n  if (typeof options === 'function') {\n    return options(resource, aorFetchType);\n  }\n\n  return options;\n};\n\nexport default (function (options) {\n  return __awaiter(_this, void 0, void 0, function () {\n    var _a, clientObject, clientOptions, introspection, resolveIntrospection, buildQueryFactory, _b, override, otherOptions, client, introspectionResults, buildQuery, raDataProvider;\n\n    return __generator(this, function (_c) {\n      switch (_c.label) {\n        case 0:\n          _a = merge({}, defaultOptions, options), clientObject = _a.client, clientOptions = _a.clientOptions, introspection = _a.introspection, resolveIntrospection = _a.resolveIntrospection, buildQueryFactory = _a.buildQuery, _b = _a.override, override = _b === void 0 ? {} : _b, otherOptions = __rest(_a, [\"client\", \"clientOptions\", \"introspection\", \"resolveIntrospection\", \"buildQuery\", \"override\"]);\n\n          if (override && process.env.NODE_ENV === 'production') {\n            console.warn( // eslint-disable-line\n            'The override option is deprecated. You should instead wrap the buildQuery function provided by the dataProvider you use.');\n          }\n\n          client = clientObject || buildApolloClient(clientOptions);\n          if (!introspection) return [3\n          /*break*/\n          , 2];\n          return [4\n          /*yield*/\n          , resolveIntrospection(client, introspection)];\n\n        case 1:\n          introspectionResults = _c.sent();\n          _c.label = 2;\n\n        case 2:\n          buildQuery = buildQueryFactory(introspectionResults, otherOptions);\n\n          raDataProvider = function raDataProvider(aorFetchType, resource, params) {\n            var overridedbuildQuery = get(override, resource + \".\" + aorFetchType);\n\n            var _a = overridedbuildQuery ? __assign({}, buildQuery(aorFetchType, resource, params), overridedbuildQuery(params)) : buildQuery(aorFetchType, resource, params),\n                parseResponse = _a.parseResponse,\n                query = __rest(_a, [\"parseResponse\"]);\n\n            if (QUERY_TYPES.includes(aorFetchType)) {\n              var apolloQuery_1 = __assign({}, query, {\n                fetchPolicy: 'network-only'\n              }, getOptions(otherOptions.query, aorFetchType, resource));\n\n              return client.query(apolloQuery_1).then(parseResponse);\n            }\n\n            var apolloQuery = __assign({\n              mutation: query.query,\n              variables: query.variables\n            }, getOptions(otherOptions.mutation, aorFetchType, resource));\n\n            return client.mutate(apolloQuery).then(parseResponse);\n          };\n\n          raDataProvider.observeRequest = function (aorFetchType, resource, params) {\n            var _a = buildQuery(aorFetchType, resource, params),\n                parseResponse = _a.parseResponse,\n                query = __rest(_a, [\"parseResponse\"]);\n\n            var apolloQuery = __assign({}, query, getOptions(otherOptions.watchQuery, aorFetchType, resource));\n\n            return client.watchQuery(apolloQuery).then(parseResponse);\n          };\n\n          raDataProvider.saga = function () {};\n\n          return [2\n          /*return*/\n          , raDataProvider];\n      }\n    });\n  });\n});","import buildVariables from './buildVariables';\nimport buildGqlQuery from './buildGqlQuery';\nimport getResponseParser from './getResponseParser';\nexport var buildQueryFactory = function buildQueryFactory(buildVariablesImpl, buildGqlQueryImpl, getResponseParserImpl) {\n  return function (introspectionResults) {\n    var knownResources = introspectionResults.resources.map(function (r) {\n      return r.type.name;\n    });\n    return function (aorFetchType, resourceName, params) {\n      var resource = introspectionResults.resources.find(function (r) {\n        return r.type.name === resourceName;\n      });\n\n      if (!resource) {\n        throw new Error(\"Unknown resource \" + resourceName + \". Make sure it has been declared on your server side schema. Known resources are \" + knownResources.join(', '));\n      }\n\n      var queryType = resource[aorFetchType];\n\n      if (!queryType) {\n        throw new Error(\"No query or mutation matching aor fetch type \" + aorFetchType + \" could be found for resource \" + resource.type.name);\n      }\n\n      var variables = buildVariablesImpl(introspectionResults)(resource, aorFetchType, params, queryType);\n      var query = buildGqlQueryImpl(introspectionResults)(resource, aorFetchType, queryType, variables);\n      var parseResponse = getResponseParserImpl(introspectionResults)(aorFetchType, resource, queryType);\n      return {\n        query: query,\n        variables: variables,\n        parseResponse: parseResponse\n      };\n    };\n  };\n};\nexport default buildQueryFactory(buildVariables, buildGqlQuery, getResponseParser);","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { ApolloClient } from 'apollo-client';\nimport { HttpLink, InMemoryCache } from 'apollo-client-preset';\nexport default (function (options) {\n  if (!options) {\n    return new ApolloClient();\n  }\n\n  var cache = options.cache,\n      link = options.link,\n      uri = options.uri,\n      otherOptions = __rest(options, [\"cache\", \"link\", \"uri\"]);\n\n  var finalLink = link;\n  var finalCache = cache;\n\n  if (!link && uri) {\n    finalLink = new HttpLink({\n      uri: uri\n    });\n  }\n\n  if (!cache) {\n    finalCache = new InMemoryCache().restore({});\n  }\n\n  return new ApolloClient(__assign({\n    link: finalLink,\n    cache: finalCache\n  }, otherOptions));\n});","import { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, UPDATE_MANY, DELETE, DELETE_MANY } from 'react-admin';\nexport var QUERY_TYPES = [GET_LIST, GET_MANY, GET_MANY_REFERENCE, GET_ONE];\nexport var MUTATION_TYPES = [CREATE, UPDATE, DELETE, UPDATE_MANY, DELETE_MANY];\nexport var ALL_TYPES = QUERY_TYPES.concat(MUTATION_TYPES);","import { TypeKind } from 'graphql';\n/**\n * Ensure we get the real type even if the root type is NON_NULL or LIST\n * @param {GraphQLType} type\n */\n\nvar getFinalType = function getFinalType(type) {\n  if (type.kind === TypeKind.NON_NULL || type.kind === TypeKind.LIST) {\n    return getFinalType(type.ofType);\n  }\n\n  return type;\n};\n\nexport default getFinalType;","import { TypeKind } from 'graphql';\n\nvar isList = function isList(type) {\n  if (type.kind === TypeKind.NON_NULL) {\n    return isList(type.ofType);\n  }\n\n  return type.kind === TypeKind.LIST;\n};\n\nexport default isList;","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, DELETE } from 'react-admin';\nimport getFinalType from './getFinalType';\nimport isList from './isList';\n\nvar sanitizeValue = function sanitizeValue(type, value) {\n  if (type.name === 'Int') {\n    return parseInt(value, 10);\n  }\n\n  if (type.name === 'Float') {\n    return parseFloat(value);\n  }\n\n  return value;\n};\n\nvar buildGetListVariables = function buildGetListVariables(introspectionResults) {\n  return function (resource, aorFetchType, params) {\n    var filter = Object.keys(params.filter).reduce(function (acc, key) {\n      var _a, _b, _c, _d, _e, _f, _g;\n\n      if (key === 'ids') {\n        return __assign({}, acc, {\n          ids: params.filter[key]\n        });\n      }\n\n      if (typeof params.filter[key] === 'object') {\n        var type = introspectionResults.types.find(function (t) {\n          return t.name === resource.type.name + \"Filter\";\n        });\n        var filterSome = type.inputFields.find(function (t) {\n          return t.name === key + \"_some\";\n        });\n\n        if (filterSome) {\n          var filter_1 = Object.keys(params.filter[key]).reduce(function (acc, k) {\n            var _a;\n\n            return __assign({}, acc, (_a = {}, _a[k + \"_in\"] = params.filter[key][k], _a));\n          }, {});\n          return __assign({}, acc, (_a = {}, _a[key + \"_some\"] = filter_1, _a));\n        }\n      }\n\n      var parts = key.split('.');\n\n      if (parts.length > 1) {\n        if (parts[1] == 'id') {\n          var type_1 = introspectionResults.types.find(function (t) {\n            return t.name === resource.type.name + \"Filter\";\n          });\n          var filterSome = type_1.inputFields.find(function (t) {\n            return t.name === parts[0] + \"_some\";\n          });\n\n          if (filterSome) {\n            return __assign({}, acc, (_b = {}, _b[parts[0] + \"_some\"] = {\n              id: params.filter[key]\n            }, _b));\n          }\n\n          return __assign({}, acc, (_c = {}, _c[parts[0]] = {\n            id: params.filter[key]\n          }, _c));\n        }\n\n        var resourceField_1 = resource.type.fields.find(function (f) {\n          return f.name === parts[0];\n        });\n        var type = getFinalType(resourceField_1.type);\n        return __assign({}, acc, (_d = {}, _d[key] = sanitizeValue(type, params.filter[key]), _d));\n      }\n\n      var resourceField = resource.type.fields.find(function (f) {\n        return f.name === key;\n      });\n\n      if (resourceField) {\n        var type_2 = getFinalType(resourceField.type);\n        var isAList = isList(resourceField.type);\n\n        if (isAList) {\n          return __assign({}, acc, (_e = {}, _e[key] = Array.isArray(params.filter[key]) ? params.filter[key].map(function (value) {\n            return sanitizeValue(type_2, value);\n          }) : sanitizeValue(type_2, [params.filter[key]]), _e));\n        }\n\n        return __assign({}, acc, (_f = {}, _f[key] = sanitizeValue(type_2, params.filter[key]), _f));\n      }\n\n      return __assign({}, acc, (_g = {}, _g[key] = params.filter[key], _g));\n    }, {});\n    return {\n      page: parseInt(params.pagination.page, 10) - 1,\n      perPage: parseInt(params.pagination.perPage, 10),\n      sortField: params.sort.field,\n      sortOrder: params.sort.order,\n      filter: filter\n    };\n  };\n};\n\nvar buildCreateUpdateVariables = function buildCreateUpdateVariables() {\n  return function (resource, aorFetchType, params, queryType) {\n    return Object.keys(params.data).reduce(function (acc, key) {\n      var _a, _b, _c;\n\n      if (Array.isArray(params.data[key])) {\n        var arg = queryType.args.find(function (a) {\n          return a.name === key + \"Ids\";\n        });\n\n        if (arg) {\n          return __assign({}, acc, (_a = {}, _a[key + \"Ids\"] = params.data[key].map(function (_a) {\n            var id = _a.id;\n            return id;\n          }), _a));\n        }\n      }\n\n      if (typeof params.data[key] === 'object') {\n        var arg = queryType.args.find(function (a) {\n          return a.name === key + \"Id\";\n        });\n\n        if (arg) {\n          return __assign({}, acc, (_b = {}, _b[key + \"Id\"] = params.data[key].id, _b));\n        }\n      }\n\n      return __assign({}, acc, (_c = {}, _c[key] = params.data[key], _c));\n    }, {});\n  };\n};\n\nexport default (function (introspectionResults) {\n  return function (resource, aorFetchType, params, queryType) {\n    var _a;\n\n    switch (aorFetchType) {\n      case GET_LIST:\n        {\n          return buildGetListVariables(introspectionResults)(resource, aorFetchType, params, queryType);\n        }\n\n      case GET_MANY:\n        return {\n          filter: {\n            ids: params.ids\n          }\n        };\n\n      case GET_MANY_REFERENCE:\n        {\n          var parts = params.target.split('.');\n          return {\n            filter: (_a = {}, _a[parts[0]] = {\n              id: params.id\n            }, _a)\n          };\n        }\n\n      case GET_ONE:\n        return {\n          id: params.id\n        };\n\n      case UPDATE:\n        {\n          return buildCreateUpdateVariables(introspectionResults)(resource, aorFetchType, params, queryType);\n        }\n\n      case CREATE:\n        {\n          return buildCreateUpdateVariables(introspectionResults)(resource, aorFetchType, params, queryType);\n        }\n\n      case DELETE:\n        return {\n          id: params.id\n        };\n    }\n  };\n});","import { TypeKind } from 'graphql';\n\nvar isRequired = function isRequired(type) {\n  if (type.kind === TypeKind.LIST) {\n    return isRequired(type.ofType);\n  }\n\n  return type.kind === TypeKind.NON_NULL;\n};\n\nexport default isRequired;","var __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport { GET_LIST, GET_MANY, GET_MANY_REFERENCE, DELETE } from 'react-admin';\nimport { QUERY_TYPES } from 'ra-data-graphql';\nimport { TypeKind } from 'graphql';\nimport * as gqlTypes from 'graphql-ast-types-browser';\nimport getFinalType from './getFinalType';\nimport isList from './isList';\nimport isRequired from './isRequired';\nexport var buildFields = function buildFields(introspectionResults) {\n  return function (fields) {\n    return fields.reduce(function (acc, field) {\n      var type = getFinalType(field.type);\n\n      if (type.name.startsWith('_')) {\n        return acc;\n      }\n\n      if (type.kind !== TypeKind.OBJECT) {\n        return acc.concat([gqlTypes.field(gqlTypes.name(field.name))]);\n      }\n\n      var linkedResource = introspectionResults.resources.find(function (r) {\n        return r.type.name === type.name;\n      });\n\n      if (linkedResource) {\n        return acc.concat([gqlTypes.field(gqlTypes.name(field.name), null, null, null, gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name('id'))]))]);\n      }\n\n      var linkedType = introspectionResults.types.find(function (t) {\n        return t.name === type.name;\n      });\n\n      if (linkedType) {\n        return acc.concat([gqlTypes.field(gqlTypes.name(field.name), null, null, null, gqlTypes.selectionSet(buildFields(introspectionResults)(linkedType.fields)))]);\n      } // NOTE: We might have to handle linked types which are not resources but will have to be careful about\n      // ending with endless circular dependencies\n\n\n      return acc;\n    }, []);\n  };\n};\nexport var getArgType = function getArgType(arg) {\n  var type = getFinalType(arg.type);\n  var required = isRequired(arg.type);\n  var list = isList(arg.type);\n\n  if (list) {\n    if (required) {\n      return gqlTypes.listType(gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(type.name))));\n    }\n\n    return gqlTypes.listType(gqlTypes.namedType(gqlTypes.name(type.name)));\n  }\n\n  if (required) {\n    return gqlTypes.nonNullType(gqlTypes.namedType(gqlTypes.name(type.name)));\n  }\n\n  return gqlTypes.namedType(gqlTypes.name(type.name));\n};\nexport var buildArgs = function buildArgs(query, variables) {\n  if (query.args.length === 0) {\n    return [];\n  }\n\n  var validVariables = Object.keys(variables).filter(function (k) {\n    return typeof variables[k] !== 'undefined';\n  });\n  var args = query.args.filter(function (a) {\n    return validVariables.includes(a.name);\n  }).reduce(function (acc, arg) {\n    return acc.concat([gqlTypes.argument(gqlTypes.name(arg.name), gqlTypes.variable(gqlTypes.name(arg.name)))]);\n  }, []);\n  return args;\n};\nexport var buildApolloArgs = function buildApolloArgs(query, variables) {\n  if (query.args.length === 0) {\n    return [];\n  }\n\n  var validVariables = Object.keys(variables).filter(function (k) {\n    return typeof variables[k] !== 'undefined';\n  });\n  var args = query.args.filter(function (a) {\n    return validVariables.includes(a.name);\n  }).reduce(function (acc, arg) {\n    return acc.concat([gqlTypes.variableDefinition(gqlTypes.variable(gqlTypes.name(arg.name)), getArgType(arg))]);\n  }, []);\n  return args;\n};\nexport default (function (introspectionResults) {\n  return function (resource, aorFetchType, queryType, variables) {\n    var sortField = variables.sortField,\n        sortOrder = variables.sortOrder,\n        metaVariables = __rest(variables, [\"sortField\", \"sortOrder\"]);\n\n    var apolloArgs = buildApolloArgs(queryType, variables);\n    var args = buildArgs(queryType, variables);\n    var metaArgs = buildArgs(queryType, metaVariables);\n    var fields = buildFields(introspectionResults)(resource.type.fields);\n\n    if (aorFetchType === GET_LIST || aorFetchType === GET_MANY || aorFetchType === GET_MANY_REFERENCE) {\n      return gqlTypes.document([gqlTypes.operationDefinition('query', gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name(queryType.name), gqlTypes.name('items'), args, null, gqlTypes.selectionSet(fields)), gqlTypes.field(gqlTypes.name(\"_\" + queryType.name + \"Meta\"), gqlTypes.name('total'), metaArgs, null, gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name('count'))]))]), gqlTypes.name(queryType.name), apolloArgs)]);\n    }\n\n    if (aorFetchType === DELETE) {\n      return gqlTypes.document([gqlTypes.operationDefinition('mutation', gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name(queryType.name), gqlTypes.name('data'), args, null, gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name('id'))]))]), gqlTypes.name(queryType.name), apolloArgs)]);\n    }\n\n    return gqlTypes.document([gqlTypes.operationDefinition(QUERY_TYPES.includes(aorFetchType) ? 'query' : 'mutation', gqlTypes.selectionSet([gqlTypes.field(gqlTypes.name(queryType.name), gqlTypes.name('data'), args, null, gqlTypes.selectionSet(fields))]), gqlTypes.name(queryType.name), apolloArgs)]);\n  };\n});","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { TypeKind } from 'graphql';\nimport { GET_LIST, GET_MANY, GET_MANY_REFERENCE } from 'react-admin';\nimport getFinalType from './getFinalType';\n\nvar sanitizeResource = function sanitizeResource(introspectionResults, resource) {\n  return function (data) {\n    var result = Object.keys(data).reduce(function (acc, key) {\n      var _a, _b, _c, _d;\n\n      if (key.startsWith('_')) {\n        return acc;\n      }\n\n      var field = resource.type.fields.find(function (f) {\n        return f.name === key;\n      });\n      var type = getFinalType(field.type);\n\n      if (type.kind !== TypeKind.OBJECT) {\n        return __assign({}, acc, (_a = {}, _a[field.name] = data[field.name], _a));\n      } // FIXME: We might have to handle linked types which are not resources but will have to be careful about\n      // endless circular dependencies\n\n\n      var linkedResource = introspectionResults.resources.find(function (r) {\n        return r.type.name === type.name;\n      });\n\n      if (linkedResource) {\n        var linkedResourceData = data[field.name];\n\n        if (Array.isArray(linkedResourceData)) {\n          return __assign({}, acc, (_b = {}, _b[field.name] = data[field.name].map(sanitizeResource(introspectionResults, linkedResource)), _b[field.name + \"Ids\"] = data[field.name].map(function (d) {\n            return d.id;\n          }), _b));\n        }\n\n        return __assign({}, acc, (_c = {}, _c[field.name + \".id\"] = linkedResourceData ? data[field.name].id : undefined, _c[field.name] = linkedResourceData ? sanitizeResource(introspectionResults, linkedResource)(data[field.name]) : undefined, _c));\n      }\n\n      return __assign({}, acc, (_d = {}, _d[field.name] = data[field.name], _d));\n    }, {});\n    return result;\n  };\n};\n\nexport default (function (introspectionResults) {\n  return function (aorFetchType, resource) {\n    return function (response) {\n      var sanitize = sanitizeResource(introspectionResults, resource);\n      var data = response.data;\n\n      if (aorFetchType === GET_LIST || aorFetchType === GET_MANY || aorFetchType === GET_MANY_REFERENCE) {\n        return {\n          data: response.data.items.map(sanitize),\n          total: response.data.total.count\n        };\n      }\n\n      return {\n        data: sanitize(data.data)\n      };\n    };\n  };\n});","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nvar __rest = this && this.__rest || function (s, e) {\n  var t = {};\n\n  for (var p in s) {\n    if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0) t[p] = s[p];\n  }\n\n  if (s != null && typeof Object.getOwnPropertySymbols === \"function\") for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\n    if (e.indexOf(p[i]) < 0) t[p[i]] = s[p[i]];\n  }\n  return t;\n};\n\nimport merge from 'lodash/merge';\nimport buildDataProvider from 'ra-data-graphql';\nimport { DELETE, DELETE_MANY, UPDATE, UPDATE_MANY } from 'react-admin';\nimport defaultBuildQuery from './buildQuery';\nvar defaultOptions = {\n  buildQuery: defaultBuildQuery\n};\nexport var buildQuery = defaultBuildQuery;\nexport default (function (options) {\n  return buildDataProvider(merge({}, defaultOptions, options)).then(function (defaultDataProvider) {\n    return function (fetchType, resource, params) {\n      // This provider does not support multiple deletions so instead we send multiple DELETE requests\n      // This can be optimized using the apollo-link-batch-http link\n      if (fetchType === DELETE_MANY) {\n        var ids = params.ids,\n            otherParams_1 = __rest(params, [\"ids\"]);\n\n        return Promise.all(params.ids.map(function (id) {\n          return defaultDataProvider(DELETE, resource, __assign({\n            id: id\n          }, otherParams_1));\n        })).then(function (results) {\n          var data = results.reduce(function (acc, _a) {\n            var data = _a.data;\n            return acc.concat([data.id]);\n          }, []);\n          return {\n            data: data\n          };\n        });\n      } // This provider does not support multiple deletions so instead we send multiple UPDATE requests\n      // This can be optimized using the apollo-link-batch-http link\n\n\n      if (fetchType === UPDATE_MANY) {\n        var ids = params.ids,\n            otherParams_2 = __rest(params, [\"ids\"]);\n\n        return Promise.all(params.ids.map(function (id) {\n          return defaultDataProvider(UPDATE, resource, __assign({\n            id: id\n          }, otherParams_2));\n        })).then(function (results) {\n          var data = results.reduce(function (acc, _a) {\n            var data = _a.data;\n            return acc.concat([data.id]);\n          }, []);\n          return {\n            data: data\n          };\n        });\n      }\n\n      return defaultDataProvider(fetchType, resource, params);\n    };\n  });\n});","import buildApolloClient from 'ra-data-graphql-simple';\n\nexport default () => {\n    const getGqlResource = resource => {\n        switch (resource) {\n            case 'customers':\n                return 'Customer';\n\n            case 'categories':\n                return 'Category';\n\n            case 'commands':\n                return 'Command';\n\n            case 'products':\n                return 'Product';\n\n            case 'reviews':\n                return 'Review';\n\n            default:\n                throw new Error(`Unknown resource ${resource}`);\n        }\n    };\n\n    return buildApolloClient({\n        clientOptions: {\n            uri: 'http://localhost:4000/graphql',\n        },\n    }).then(dataProvider => (type, resource, params) =>\n        dataProvider(type, getGqlResource(resource), params)\n    );\n};\n"],"sourceRoot":""}