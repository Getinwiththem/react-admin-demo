{"version":3,"sources":["../../../packages/ra-core/esm/util/fetch.js","../../../packages/ra-core/esm/util/index.js","../../../packages/ra-data-simple-rest/esm/index.js","dataProvider/rest.js","../../../packages/ra-core/esm/util/HttpError.js"],"names":["__webpack_require__","r","__webpack_exports__","Buffer","d","fetchJson","queryParameters","flattenObject","_HttpError__WEBPACK_IMPORTED_MODULE_0__","query_string__WEBPACK_IMPORTED_MODULE_1__","__assign","Object","assign","t","s","i","n","arguments","length","p","prototype","hasOwnProperty","call","apply","this","url","options","requestHeaders","headers","Headers","Accept","has","body","FormData","set","user","authenticated","token","fetch","then","response","text","status","statusText","_a","json","JSON","parse","e","Promise","reject","message","value","path","isArray","Array","isBuffer","isObject","toString","hasKeys","keys","isValidObject","concat","map","key","join","_fetch__WEBPACK_IMPORTED_MODULE_0__","restProvider","apiUrl","httpClient","util","type","resource","params","dataFetchActions","all","ids","id","method","stringify","data","responses","_b","pagination","page","perPage","_c","sort","field","order","query","range","filter","query_string","_d","_e","target","Error","convertDataRequestToHTTP","total","parseInt","get","split","pop","convertHTTPResponse","simpleRestProvider","resolve","setTimeout","__extends","_extendStatics","b","setPrototypeOf","__proto__","__","constructor","create","HttpError","_super","_this","name","captureStackTrace","stack"],"mappings":"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","file":"static/js/3.62e16fa1.chunk.js","sourcesContent":["var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport HttpError from './HttpError';\nimport { stringify } from 'query-string';\nexport var fetchJson = function fetchJson(url, options) {\n  if (options === void 0) {\n    options = {};\n  }\n\n  var requestHeaders = options.headers || new Headers({\n    Accept: 'application/json'\n  });\n\n  if (!requestHeaders.has('Content-Type') && !(options && options.body && options.body instanceof FormData)) {\n    requestHeaders.set('Content-Type', 'application/json');\n  }\n\n  if (options.user && options.user.authenticated && options.user.token) {\n    requestHeaders.set('Authorization', options.user.token);\n  }\n\n  return fetch(url, __assign({}, options, {\n    headers: requestHeaders\n  })).then(function (response) {\n    return response.text().then(function (text) {\n      return {\n        status: response.status,\n        statusText: response.statusText,\n        headers: response.headers,\n        body: text\n      };\n    });\n  }).then(function (_a) {\n    var status = _a.status,\n        statusText = _a.statusText,\n        headers = _a.headers,\n        body = _a.body;\n    var json;\n\n    try {\n      json = JSON.parse(body);\n    } catch (e) {// not json, no big deal\n    }\n\n    if (status < 200 || status >= 300) {\n      return Promise.reject(new HttpError(json && json.message || statusText, status, json));\n    }\n\n    return {\n      status: status,\n      headers: headers,\n      body: body,\n      json: json\n    };\n  });\n};\nexport var queryParameters = stringify;\n\nvar isValidObject = function isValidObject(value) {\n  if (!value) {\n    return false;\n  }\n\n  var isArray = Array.isArray(value);\n  var isBuffer = typeof Buffer !== 'undefined' && Buffer.isBuffer(value);\n  var isObject = Object.prototype.toString.call(value) === '[object Object]';\n  var hasKeys = !!Object.keys(value).length;\n  return !isArray && !isBuffer && isObject && hasKeys;\n};\n\nexport var flattenObject = function flattenObject(value, path) {\n  if (path === void 0) {\n    path = [];\n  }\n\n  var _a;\n\n  if (isValidObject(value)) {\n    return Object.assign.apply(Object, [{}].concat(Object.keys(value).map(function (key) {\n      return flattenObject(value[key], path.concat([key]));\n    })));\n  } else {\n    return path.length ? (_a = {}, _a[path.join('.')] = value, _a) : value;\n  }\n};","import downloadCSV from './downloadCSV';\nimport FieldTitle from './FieldTitle';\nimport getFetchedAt from './getFetchedAt';\nimport HttpError from './HttpError';\nimport linkToRecord from './linkToRecord';\nimport removeEmpty from './removeEmpty';\nimport removeKey from './removeKey';\nimport resolveRedirectTo from './resolveRedirectTo';\nimport TestContext from './TestContext';\nimport warning from './warning';\nimport * as fetchUtils from './fetch';\nexport { fetchUtils, downloadCSV, FieldTitle, getFetchedAt, HttpError, linkToRecord, removeEmpty, removeKey, resolveRedirectTo, TestContext, warning };","var __assign = this && this.__assign || function () {\n  __assign = Object.assign || function (t) {\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\n      s = arguments[i];\n\n      for (var p in s) {\n        if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\n      }\n    }\n\n    return t;\n  };\n\n  return __assign.apply(this, arguments);\n};\n\nimport { stringify } from 'query-string';\nimport { fetchUtils, GET_LIST, GET_ONE, GET_MANY, GET_MANY_REFERENCE, CREATE, UPDATE, UPDATE_MANY, DELETE, DELETE_MANY } from 'react-admin';\n/**\n * Maps react-admin queries to a simple REST API\n *\n * The REST dialect is similar to the one of FakeRest\n * @see https://github.com/marmelab/FakeRest\n * @example\n * GET_LIST     => GET http://my.api.url/posts?sort=['title','ASC']&range=[0, 24]\n * GET_ONE      => GET http://my.api.url/posts/123\n * GET_MANY     => GET http://my.api.url/posts?filter={ids:[123,456,789]}\n * UPDATE       => PUT http://my.api.url/posts/123\n * CREATE       => POST http://my.api.url/posts\n * DELETE       => DELETE http://my.api.url/posts/123\n */\n\nexport default (function (apiUrl, httpClient) {\n  if (httpClient === void 0) {\n    httpClient = fetchUtils.fetchJson;\n  }\n  /**\n   * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n   * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n   * @param {Object} params The data request params, depending on the type\n   * @returns {Object} { url, options } The HTTP request parameters\n   */\n\n\n  var convertDataRequestToHTTP = function convertDataRequestToHTTP(type, resource, params) {\n    var _a;\n\n    var url = '';\n    var options = {};\n\n    switch (type) {\n      case GET_LIST:\n        {\n          var _b = params.pagination,\n              page = _b.page,\n              perPage = _b.perPage;\n          var _c = params.sort,\n              field = _c.field,\n              order = _c.order;\n          var query = {\n            sort: JSON.stringify([field, order]),\n            range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n            filter: JSON.stringify(params.filter)\n          };\n          url = apiUrl + \"/\" + resource + \"?\" + stringify(query);\n          break;\n        }\n\n      case GET_ONE:\n        url = apiUrl + \"/\" + resource + \"/\" + params.id;\n        break;\n\n      case GET_MANY:\n        {\n          var query = {\n            filter: JSON.stringify({\n              id: params.ids\n            })\n          };\n          url = apiUrl + \"/\" + resource + \"?\" + stringify(query);\n          break;\n        }\n\n      case GET_MANY_REFERENCE:\n        {\n          var _d = params.pagination,\n              page = _d.page,\n              perPage = _d.perPage;\n          var _e = params.sort,\n              field = _e.field,\n              order = _e.order;\n          var query = {\n            sort: JSON.stringify([field, order]),\n            range: JSON.stringify([(page - 1) * perPage, page * perPage - 1]),\n            filter: JSON.stringify(__assign({}, params.filter, (_a = {}, _a[params.target] = params.id, _a)))\n          };\n          url = apiUrl + \"/\" + resource + \"?\" + stringify(query);\n          break;\n        }\n\n      case UPDATE:\n        url = apiUrl + \"/\" + resource + \"/\" + params.id;\n        options.method = 'PUT';\n        options.body = JSON.stringify(params.data);\n        break;\n\n      case CREATE:\n        url = apiUrl + \"/\" + resource;\n        options.method = 'POST';\n        options.body = JSON.stringify(params.data);\n        break;\n\n      case DELETE:\n        url = apiUrl + \"/\" + resource + \"/\" + params.id;\n        options.method = 'DELETE';\n        break;\n\n      default:\n        throw new Error(\"Unsupported fetch action type \" + type);\n    }\n\n    return {\n      url: url,\n      options: options\n    };\n  };\n  /**\n   * @param {Object} response HTTP response from fetch()\n   * @param {String} type One of the constants appearing at the top if this file, e.g. 'UPDATE'\n   * @param {String} resource Name of the resource to fetch, e.g. 'posts'\n   * @param {Object} params The data request params, depending on the type\n   * @returns {Object} Data response\n   */\n\n\n  var convertHTTPResponse = function convertHTTPResponse(response, type, resource, params) {\n    var headers = response.headers,\n        json = response.json;\n\n    switch (type) {\n      case GET_LIST:\n      case GET_MANY_REFERENCE:\n        if (!headers.has('content-range')) {\n          throw new Error('The Content-Range header is missing in the HTTP Response. The simple REST data provider expects responses for lists of resources to contain this header with the total number of results to build the pagination. If you are using CORS, did you declare Content-Range in the Access-Control-Expose-Headers header?');\n        }\n\n        return {\n          data: json,\n          total: parseInt(headers.get('content-range').split('/').pop(), 10)\n        };\n\n      case CREATE:\n        return {\n          data: __assign({}, params.data, {\n            id: json.id\n          })\n        };\n\n      default:\n        return {\n          data: json\n        };\n    }\n  };\n  /**\n   * @param {string} type Request type, e.g GET_LIST\n   * @param {string} resource Resource name, e.g. \"posts\"\n   * @param {Object} payload Request parameters. Depends on the request type\n   * @returns {Promise} the Promise for a data response\n   */\n\n\n  return function (type, resource, params) {\n    // simple-rest doesn't handle filters on UPDATE route, so we fallback to calling UPDATE n times instead\n    if (type === UPDATE_MANY) {\n      return Promise.all(params.ids.map(function (id) {\n        return httpClient(apiUrl + \"/\" + resource + \"/\" + id, {\n          method: 'PUT',\n          body: JSON.stringify(params.data)\n        });\n      })).then(function (responses) {\n        return {\n          data: responses.map(function (response) {\n            return response.json;\n          })\n        };\n      });\n    } // simple-rest doesn't handle filters on DELETE route, so we fallback to calling DELETE n times instead\n\n\n    if (type === DELETE_MANY) {\n      return Promise.all(params.ids.map(function (id) {\n        return httpClient(apiUrl + \"/\" + resource + \"/\" + id, {\n          method: 'DELETE'\n        });\n      })).then(function (responses) {\n        return {\n          data: responses.map(function (response) {\n            return response.json;\n          })\n        };\n      });\n    }\n\n    var _a = convertDataRequestToHTTP(type, resource, params),\n        url = _a.url,\n        options = _a.options;\n\n    return httpClient(url, options).then(function (response) {\n      return convertHTTPResponse(response, type, resource, params);\n    });\n  };\n});","import simpleRestProvider from 'ra-data-simple-rest';\n\nconst restProvider = simpleRestProvider('http://localhost:4000');\nexport default (type, resource, params) =>\n    new Promise(resolve =>\n        setTimeout(() => resolve(restProvider(type, resource, params)), 500)\n    );\n","var __extends = this && this.__extends || function () {\n  var _extendStatics = function extendStatics(d, b) {\n    _extendStatics = Object.setPrototypeOf || {\n      __proto__: []\n    } instanceof Array && function (d, b) {\n      d.__proto__ = b;\n    } || function (d, b) {\n      for (var p in b) {\n        if (b.hasOwnProperty(p)) d[p] = b[p];\n      }\n    };\n\n    return _extendStatics(d, b);\n  };\n\n  return function (d, b) {\n    _extendStatics(d, b);\n\n    function __() {\n      this.constructor = d;\n    }\n\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n  };\n}();\n\nvar HttpError =\n/** @class */\nfunction (_super) {\n  __extends(HttpError, _super);\n\n  function HttpError(message, status, body) {\n    if (body === void 0) {\n      body = null;\n    }\n\n    var _this = _super.call(this, message) || this;\n\n    _this.message = message;\n    _this.status = status;\n    _this.body = body;\n    _this.name = _this.constructor.name;\n\n    if (typeof Error.captureStackTrace === 'function') {\n      Error.captureStackTrace(_this, _this.constructor);\n    } else {\n      _this.stack = new Error(message).stack;\n    }\n\n    _this.stack = new Error().stack;\n    return _this;\n  }\n\n  return HttpError;\n}(Error);\n\nexport default HttpError;"],"sourceRoot":""}